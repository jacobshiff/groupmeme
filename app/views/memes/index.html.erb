  <div class="wrapper">
  <div class="portfolio-wrapper">
    <div class="row">
      <h2>Trending at <%= @group.title %> <%= render partial: "sort", locals: {group: @group} %></h2>
    </div>

  <!-- Need to add in code that crops image so all gifs are same size -->
       <!-- @memes.in_groups_of(3).each do |meme_row|  -->
      <% @memes.each do |meme|  %>

            <div class="card <%= meme.tag_class_list %>">
              <%= link_to meme_path(meme.group.group_slug, meme), class: "thumb" do %>
                  <%= image_tag(meme.image.url) %>
                  <span class="overlay"><span class="fa fa-chevron-circle-right"></span></span>
              <% end %>
              <div class="card-body">
                <div class="react" meme_parent_id="<%=meme.id%>">
                  <%= render partial: "memes/memes_reactions", locals: {meme: meme} %>
                </div>
                <h4><%= meme.title if meme.title %></h4>
                <h5><small>Posted by <%= link_to meme.creator.username, user_path(meme.creator.username)%></small></h5>
                <h5><small><a href="/<%= current_group.group_slug %>/memes/<%= meme.id %>#comments"><%= meme.comments.count %> comments</small></h5></a>
              </div><!-- end card-body -->
              <div class="card-footer">
                <ul class="list-inline filters">
                  <% meme.tags.each do |tag| %>
                  <li><%= link_to tag.name, tag_path(current_group.group_slug, tag.slug)%></li>
                  <% end %>
                </ul>
              </div>
        </div>
      <% end %>
  </div>
  </div>

  <script type="text/javascript">

    $(document).ready(function() {

      $('.dropdown-toggle').dropdown();

      var $container = $('.portfolio-wrapper');

      $container.imagesLoaded( function(){
        $container.isotope({
          itemSelector : '.card',
          layoutMode : 'fitRows'
        });
      });

      // Needed functions
      var getColWidth = function() {
        var width,
        windowWidth = $(window).width();
        if( windowWidth <= 480 ) {
          width = Math.floor( $container.width() );
        } else if( windowWidth <= 768 ) {
          width = Math.floor( $container.width() );
        } else {
          width = Math.floor( 250 );
        }
        return width;
      }

      function setWidths() {
        var colWidth = getColWidth();
        $container.children().css({ width: colWidth });
      }


      $(window).smartresize(function() {
        setWidths();
        $container.isotope({
          masonry: {
            columnWidth: getColWidth()
          }
        });
      });

      $('.filter-portfolio li a').click(function(){
        $('.filter-portfolio li.active').removeClass('active');
        $(this).parent('li').addClass('active');
        var selector = $(this).attr('data-filter');
        $container.isotope({
          filter: selector,
          masonry: {  }
        });
        return false;
      });
      // update columnWidth on window resize
      $(window).smartresize(function(){
        $container.isotope({
          // update columnWidth to a percentage of container width
          masonry: {  }
        });
      });

    });

  </script>
